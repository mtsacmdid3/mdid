<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   maxWidth="550"  maxHeight="450"
			   title.default="Select a Slideshow" title.noslideshows="No Slideshows"
			   creationComplete="init()"
>
	
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.controls.dataGridClasses.DataGridColumn;
			
			import org.mdid.MediaViewer.events.LoginEvent;
			import org.mdid.MediaViewer.events.SlideshowsEvent;
			
			[Embed(source='/assets/skins/skin.swf', symbol='BusyBlocks')]
			[Bindable]
			private var busyAnimation:Class;
			
			[Bindable]
			public var tagsData:ArrayCollection = new ArrayCollection();
			
			private function init():void {
				this.addEventListener(KeyboardEvent.KEY_UP, handleKeyboardInput);
			}
			private function handleKeyboardInput(e:KeyboardEvent):void {
				if (e.keyCode != 13) return;
				var focusedObject:InteractiveObject = this.getFocus();
				if (focusedObject is Button) {
					focusedObject.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
				} else if (focusedObject is DataGrid && this.dg.selectedIndex > -1) {
					this.dg.dispatchEvent(new MouseEvent(MouseEvent.DOUBLE_CLICK));
				}
			}

			public function getDataLabel(item:Object, column:DataGridColumn):String {
				return dateFormatter.format(item[column.dataField]);
			}
			protected function resetTagsButton_clickHandler(event:MouseEvent):void {;
				for(var i:int = 0; i<this.tagsData.length; i++) {
					this.tagsData[i].isSelected = false;
				}
				this.tagsData.refresh();
				dispatchEvent(new SlideshowsEvent(SlideshowsEvent.FILTER_LIST));
			}
			protected function logoutbutton_clickHandler(e:MouseEvent):void {
				// TODO Auto-generated method stub
			}
			protected function loadSelectedButton_clickHandler(event:MouseEvent):void {
				if (this.dg.selectedIndex < 0) return;
				var e:SlideshowsEvent = new SlideshowsEvent(SlideshowsEvent.LOAD_SELECTED_SLIDESHOW);
				e.selectedSlideshow = this.dg.selectedItem;
				dispatchEvent(e);
			}
			private function selectAnotherButton_clickHandler(e:MouseEvent):void {
				this.setCurrentState("default");
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		<mx:DateFormatter id="dateFormatter" formatString="MM/DD/YYYY"/>
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout gap="4" horizontalAlign="center" paddingBottom="8" paddingLeft="10" paddingRight="10" paddingTop="8"/>
	</s:layout>
	
	<s:states>
		<s:State name="default"/>
		<s:State name="noslideshows"/>
		<s:State name="loadingslideshow"/>
		<s:State name="slideshowloaded"/>
		<s:State name="slideshowfailedtoload"/>
		<s:State name="notloggedin"/>
	</s:states>
	
	<s:HGroup includeIn="default" gap="8" width="100%" height="397">
		<s:VGroup height="100%">
			<s:Label id="yourTags" text="Filter by Tags:"/>
			<s:List id="tags" dataProvider="{tagsData}" width="125" height= "100%" click="tags.selectedIndex = -1;" >
				<s:itemRenderer>
					<fx:Component>
						<s:ItemRenderer>
							<s:HGroup paddingLeft="2" paddingRight="2" paddingTop="0" paddingBottom="3" width="100%" height="100%" rollOverColor="#FFFFFF">
								<s:CheckBox id="tagsListCheckbox" width="100%" height="100%" label="{data.label}" selected="{data.isSelected}" change="tagCheckbox_changeHandler(event)">
									<fx:Script>
										<![CDATA[
											import org.mdid.MediaViewer.events.SlideshowsEvent;
											protected function tagCheckbox_changeHandler(e:Event):void
											{
												data.isSelected = !data.isSelected;
												this.outerDocument.dispatchEvent(new SlideshowsEvent(SlideshowsEvent.FILTER_LIST));
											}
										]]>
									</fx:Script>
								</s:CheckBox>
							</s:HGroup>
						</s:ItemRenderer>
					</fx:Component>
				</s:itemRenderer>
			</s:List>
			<s:Button id="resetTagsButton" label="Reset Tags" click="resetTagsButton_clickHandler(event)"/>
		</s:VGroup>
		<s:VGroup height="100%">
			<s:HGroup verticalAlign="middle" horizontalAlign="left" gap="8">
				<s:Label id="keywordSearch" text="Title Search: "/>
				<s:TextInput id="searchBox" width="244" change="dispatchEvent(new SlideshowsEvent(SlideshowsEvent.FILTER_LIST));"/>
				<s:Button id="undoSearchButton" label="Clear" width="50" click="this.searchBox.text = '';dispatchEvent(new SlideshowsEvent(SlideshowsEvent.FILTER_LIST));"/>
			</s:HGroup>
			<mx:DataGrid id="dg" width="382" height="100%" doubleClickEnabled="true" doubleClick="loadSelectedButton_clickHandler(event)" updateComplete="this.searchBox.setFocus()"/>
			<s:HGroup verticalAlign="middle" horizontalAlign="center" width="100%">
				<s:CheckBox id="showHiddenCheckbox" label="Show hidden slideshows" selected="false" change="dispatchEvent(new SlideshowsEvent(SlideshowsEvent.FILTER_LIST));"/>
				<mx:Spacer width="100%"/>
				<s:Button id="loadSelectedButton" label="Load Selected Slideshow" enabled="{this.dg.selectedIndex > -1}" click="loadSelectedButton_clickHandler(event)"/>
			</s:HGroup>
		</s:VGroup>
	</s:HGroup>
	<s:VGroup includeIn="notloggedin" gap="15" paddingTop="10" paddingBottom="8" horizontalAlign="center" width="275">
		<s:Label text="ALERT: You are NOT logged into MDID." textAlign="center" maxWidth="250"/>
		<s:HGroup gap="10">
			<s:Button id="notLoggedInCloseButton" label="Close Window" click="this.closeButton_clickHandler(event)" creationComplete="this.notLoggedInCloseButton.setFocus();"/>
			<s:Button id="logIntoMDID" label="Log into MDID"/>
		</s:HGroup>
	</s:VGroup>
	<s:VGroup includeIn="noslideshows" gap="15" paddingTop="10" paddingBottom="8" horizontalAlign="center" width="275">
		<s:Label text="ALERT: You do not currently have any presentations." textAlign="center" maxWidth="250"/>
		<s:HGroup gap="10">
			<s:Button id="noSlideshowsCloseButton" label="Close Window" click="this.closeButton_clickHandler(event)" creationComplete="this.noSlideshowsCloseButton.setFocus();"/>
			<s:Button label="Logout" click="logoutbutton_clickHandler(event)"/>
		</s:HGroup>
	</s:VGroup>
	<s:VGroup includeIn="slideshowloaded" gap="15" paddingTop="10" paddingBottom="8" horizontalAlign="center" width="275">
		<s:Label text="SUCCESS: Your slideshow has been retrieved." textAlign="center" maxWidth="250"/>
		<s:HGroup gap="10">
			<s:Button id="closeWindowButton" label="Close Window" click="this.closeButton_clickHandler(event)" creationComplete="this.closeWindowButton.setFocus();"/>
			<s:Button label="Return to Slideshow List"/>
		</s:HGroup>
	</s:VGroup>
	<s:VGroup horizontalAlign="center" includeIn="loadingslideshow" gap="15" paddingTop="10" paddingBottom="12" width="275">
		<s:Label id="loadingSelectedLabel" text="Retrieving selected slideshow..." textAlign="center" maxWidth="250"/>
		<mx:Image source="{busyAnimation}"/>
		<s:Label text="[ Please be patient. ]" textAlign="center" maxWidth="250"/>
	</s:VGroup>
	<s:VGroup includeIn="slideshowfailedtoload" gap="15" paddingTop="10" paddingBottom="8" horizontalAlign="center" width="275">
		<s:Label text="ERROR: Unable to retrive selected slideshow." textAlign="center" maxWidth="250"/>
		<s:HGroup gap="10">
			<s:Button label="Select Sldieshow" click="selectAnotherButton_clickHandler(event)"/>
			<s:Button label="Logout" click="logoutbutton_clickHandler(event)"/>
		</s:HGroup>
		<s:Label id="errormessage" textAlign="center" maxWidth="250"/>
	</s:VGroup>
</s:TitleWindow>
