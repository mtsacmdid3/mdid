<?xml version="1.0" encoding="utf-8"?>
<s:WindowedApplication xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:components="org.mdid.MediaViewer.views.components.*"
					   xmlns:mv="org.mdid.MediaViewer.*"
					   backgroundAlpha="1"
					   backgroundColor.default="#000000"
					   minWidth="750"
					   minHeight="580"
					   windowActivate="handleFocusInOut(event)"
					   windowDeactivate="handleFocusInOut(event)"
					   creationComplete="init()"
					   showStatusBar="false"
					   >
<!-- skinClass="assets.skins.CustomWindowApplicationSkin" test -->
	<s:layout>
		<s:VerticalLayout 
			horizontalAlign="center" 
			verticalAlign="middle"
			gap="0"
			paddingBottom="0" paddingLeft="0" paddingRight="0" paddingTop="0"
			/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import mx.events.AIREvent;
			
			import org.mdid.MediaViewer.views.components.SecondWindow;
			
			public var secondWindow:SecondWindow;
			public var mdidSupportURL:String = 	"http://support.mdid.org/mediaviewer/mediaviewer-desktop/";
;
			public var titlesSubmenu:XML = <slides version="0"/>;
			
			[Bindable]
			public var isSmoothBitmap:Boolean = true;

			private var revertStateTimer:Timer = new Timer(450, 1);
			private function init():void {
				revertStateTimer.addEventListener(TimerEvent.TIMER, revertStateToDefault);
			}
			private function revertStateToDefault(e:TimerEvent):void {
				revertStateTimer.stop();
				this.borderRect.visible = false;
			}
			protected function handleFocusInOut(e:AIREvent):void {
				this.mainview.appholder.topbar.focusIndicator.source = (e.type == AIREvent.WINDOW_ACTIVATE) ? this.mainview.appholder.topbar.focus_in : this.mainview.appholder.topbar.focus_out;				
				this.mainview.appholder.topbar.focusIndicator_refl.invalidateDisplayList();
				if (this.mainview.appholder.topbar.smallpinbutton.styleName == "SmallPinButton") {
					this.borderRect.width = this.mainview.width;
					this.borderRect.height = this.mainview.height;
					this.borderStroke.color = (e.type == AIREvent.WINDOW_ACTIVATE) ? 0x00F944 : 0xC3C3C3;
					this.borderRect.visible = true;
					revertStateTimer.reset();
					revertStateTimer.start();
				}
			}
		]]>
	</fx:Script>	
	<fx:Declarations>
		<mv:ParentContext id="parentContext" contextView="{this}" />
	</fx:Declarations>
	
	<fx:Style source="/assets/styles/main.css" />
	<fx:Style source="/assets/styles/buttons.css" />
	<fx:Style source="/assets/styles/kingnarestyle.css" />
	
	<s:states>
		<s:State name="default"/>
		<s:State name="updateapplication"/>
	</s:states>	
	<components:MainView id="mainview" excludeFrom="updateapplication"/>
	<s:Rect id="borderRect" x="0" y="0" excludeFrom="updateapplication" includeInLayout="false" alpha=".67" visible="false">
		<s:stroke>
			<s:SolidColorStroke id="borderStroke" color="0x00F944" weight="8"/>
		</s:stroke>
	</s:Rect>
	<s:TitleWindow id="updateWindow" includeIn="updateapplication" verticalCenter="0" horizontalCenter="0" title="Updating MediaViewer" width="275" height="125">
		<s:VGroup verticalAlign="middle" horizontalAlign="center" gap="18" width="100%" height="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">
			<s:Label id="updateMessage" fontSize="12" textAlign="center" maxWidth="255"/>	
			<s:Label fontSize="12" textAlign="center" text="(Please do NOT close the MediaViewer during the update.)" maxWidth="255"/>
		</s:VGroup>
	</s:TitleWindow>
</s:WindowedApplication>
